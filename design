plans:
- In math_utils add someone that knows how to do Expand.
  to do expand it needs the Galois keys, maybe some pir parameters.
  / maybe have it in a class and store the needed parameters in the class instance.

- verifier:
    params: work vector, db row outputs True or False.

- work distributer component:
    num workers, num rows in DB.
    Due to the caching - we need to have the workers hold ALL queries (side effect of reducing amount of computations on the server).

- work reducer/unifier component:
    receives chunks of completed work from workers.
    then unifies the work

- where are we doing second PIR? TODO think about it
    Open questions:
        do second once you have everything ?
        do it once a new work chunk is verified ?

- manager (todo name)
    perhaps the networking layer which knows how to distribute the work to all components.
    should have access to:
        to verifer.
        to work-distributer.
        to unifier.
    receive processed work on multiple threads -> forward to verifiers, once seen as good: forward to unifier(?)

TODO: read Adra.